######################### General #########################

# TODO: To get tmux config path user must create additional symlink and this is
# realy bad idea IMHO. We should find a solution for this problem.
CONF_DIR="$HOME/.tmux_conf_dir"
SCRIPTS_FILE="$CONF_DIR/scripts.sh"

# general
set-option -s escape-time 0
set-option -g history-limit 10000
set-option -g display-time 1000

# unbins
unbind n
unbind p

# colors
set-option -g default-terminal "xterm-256color"

# windows / panes numbering
set-option -g base-index 1
set-window-option -g pane-base-index 1

# automatically set window title
set-window-option -g automatic-rename on
set-option -g renumber-windows on
set-option -g set-titles on

# activity
set-option -g monitor-activity on
set-option -g visual-activity on

# focus events
set-option -g focus-events on

# movement
set-window-option -g mode-keys vi

# switch panes by pressing alt-arrow keys
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# change windows by pressing f-keys
bind-key -n F1 select-window -t 1
bind-key -n F2 select-window -t 2
bind-key -n F3 select-window -t 3
bind-key -n F4 select-window -t 4

# swap pane left/right
bind-key > swap-pane -D
bind-key < swap-pane -U

# preserve current path on new panes
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"

# reorder tmux windows using Ctrl+Shift+Left/Right keys
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# enter search
bind-key / copy-mode\; command-prompt -p "search up" "send -X search-backward '%%%'"

# toggle mouse
bind-key m run "cat $SCRIPTS_FILE | sh -s toggle_mouse"

# reload config within tmux
bind-key r source-file "~/.tmux.conf" \; run-shell "sleep .3s" \; display "~/.tmux.conf sourced"

# clean history
bind-key h send-keys C-l \; run-shell "sleep .3s" \; clear-history\; display "Cleared"

# deatach clients(aka reattach session)
bind-key D detach -a

# clipboard
# XXX: Current clipboad approach is pretty much broken
bind-key p paste-buffer

######################### Design ##########################

# TODO: move design part to a separate file

CL_BACKGROUND=colour237
CL_BACKGROUND_ACTIVE=colour239
CL_FOREGROUND_SOFT=colour248
CL_FOREGROUND_BORDER=colour250
CL_FOREGROUND=colour223
CL_ACTIVE=colour214
CL_PASIVE=colour109
CL_CLOCK=colour246

# general settings
set-option -g status-left ""
set -g status-left-length 30
set -g status-right-length 150
set-window-option -g window-status-separator ""

# bar refresh
set -g status-interval 1

# window title
set-window-option -g window-status-style bg=$CL_ACTIVE,fg=$CL_BACKGROUND

# windows with an activity
set-window-option -g window-status-activity-style bg=$CL_BACKGROUND,fg=$CL_FOREGROUND_SOFT

# pane borders
set-option -g pane-active-border-style fg=$CL_FOREGROUND_BORDER
set-option -g pane-border-style fg=$CL_BACKGROUND

# messages
set-option -g message-style bg=$CL_BACKGROUND_ACTIVE,fg=$CL_FOREGROUND

# command field
set-option -g message-command-style bg=$CL_BACKGROUND_ACTIVE,fg=$CL_FOREGROUND

# statusbar
set-option -g status-style bg=$CL_BACKGROUND,fg=$CL_FOREGROUND

# clock
set-window-option -g clock-mode-colour $CL_PASIVE

# statusbar/passive tab
set-window-option -g window-status-format "\
#[fg=$CL_BACKGROUND,bg=$CL_BACKGROUND_ACTIVE,noitalics]\
#[fg=$CL_FOREGROUND,bg=$CL_BACKGROUND_ACTIVE] #I\
#[fg=$CL_FOREGROUND,bg=$CL_BACKGROUND_ACTIVE] #W \
#[fg=$CL_BACKGROUND_ACTIVE,bg=$CL_BACKGROUND,noitalics]\
"

# statusbar/active tab
set-window-option -g window-status-current-format "\
#[fg=$CL_BACKGROUND,bg=$CL_ACTIVE,noitalics,nounderscore]\
#[fg=$CL_BACKGROUND_ACTIVE,bg=$CL_ACTIVE] #I\
#[fg=$CL_BACKGROUND_ACTIVE,bg=$CL_ACTIVE, bold] #W \
#[fg=$CL_ACTIVE,bg=$CL_BACKGROUND,nobold,noitalics,nounderscore]\
"

# statusbar/rightside
set-option -g status-right " \
#[fg=$CL_CLOCK,bg=$CL_BACKGROUND_ACTIVE] RAM: #(sh $SCRIPTS_FILE get_memory) |\
#[fg=$CL_CLOCK,bg=$CL_BACKGROUND_ACTIVE] CPU: #(sh $SCRIPTS_FILE get_load) |\
#[fg=$CL_CLOCK,bg=$CL_BACKGROUND_ACTIVE] %Y-%m-%d \
#[fg=$CL_BACKGROUND,bg=$CL_FOREGROUND_SOFT] %H:%M:%S %p \
"
